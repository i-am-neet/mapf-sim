# World file for demonstrating wander stage controller
# Tested on diamondback, should work on electric
# Arkapravo Bhaumik, 24 October 2011
# arkapravobhaumik AT gmail.com

define roomba position
(
  size [0.33 0.33 0.1]

  # this block approximates the circular shape of a Roomba
  block( 
    points 16
    point[0] [ 0.225 0.000 ]
    point[1] [ 0.208 0.086 ]
    point[2] [ 0.159 0.159 ]
    point[3] [ 0.086 0.208 ]
    point[4] [ 0.000 0.225 ]
    point[5] [ -0.086 0.208 ]
    point[6] [ -0.159 0.159 ]
    point[7] [ -0.208 0.086 ]
    point[8] [ -0.225 0.000 ]
    point[9] [ -0.208 -0.086 ]
    point[10] [ -0.159 -0.159 ]
    point[11] [ -0.086 -0.208 ]
    point[12] [ -0.000 -0.225 ]
    point[13] [ 0.086 -0.208 ]
    point[14] [ 0.159 -0.159 ]
    point[15] [ 0.208 -0.086 ]
  )
  color "gray50"
)

define create roomba( color "gray90" )

define sicklaser laser
(
  # laser-specific properties
  # factory settings for LMS200	
  range_max 8.0
  fov 180.0
  samples 361

  #samples 90 # still useful but much faster to compute

  # generic model properties
  color "blue"
  size [ 0.156 0.155 0.19 ] # dimensions from LMS200 data sheet	
)


define floorplan model
(
  # sombre, sensible, artistic
  color "gray10"

  # most maps will need a bounding box
  boundary 1

  gui_nose 0
  gui_grid 0
  gui_move 0
  gui_outline 0
  gripper_return 0
  fiducial_return 0
  laser_return 1
)

quit_time 3600 # 1 hour of simulated time
speedup 02 # A very high speed-up is not recommended for SLAM

paused 0

resolution 0.01

# configure the GUI window
window
(
  size [ 700.000 660.000 ] # in pixels
  scale 35  # pixels per meter
  center [ 0  0 ]
  rotate [ 0  0 ]
  			
  show_data 1              # 1=on 0=off
)

# load an environment bitmap
floorplan
( 
  name "roomba-stage"
  size [16.000 16.000 0.800]
  pose [0 0 0 0]
  bitmap "bitmaps/roomba-slam.png"
)

roomba
(		  
  # can refer to the robot by this name
  name "roomba"
  pose [ 0 0 0 90 ] 

  sicklaser()
 
  ctrl "wander"
)

